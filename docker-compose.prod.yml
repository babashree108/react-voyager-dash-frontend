version: "3.9"

services:
  db:
    image: mysql:8.0
    container_name: nxtclass-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-nxtClass108}
      MYSQL_USER: ${MYSQL_USER:-nxtclass_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-change_me}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-change_root}
    command: ["mysqld", "--default-authentication-plugin=mysql_native_password", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]
    volumes:
      - db-data:/var/lib/mysql
      # Mount initialization scripts if you have any (schema/data)
      # - ./backend/database:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-change_root}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - app-net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nxtclass-backend
    restart: unless-stopped
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/${MYSQL_DATABASE:-nxtClass108}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER:-nxtclass_user}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD:-change_me}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      JWT_SECRET: ${JWT_SECRET:-please_change_this_secret_to_256bit_random}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-3600000}
      # Do NOT activate prod profile unless configured for MySQL
      # SPRING_PROFILES_ACTIVE: prod
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8080"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      - app-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL:-/api}
    container_name: nxtclass-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_started
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - app-net

volumes:
  db-data:

networks:
  app-net:
    driver: bridge
