version: '3.8'

services:
  # MySQL Database
  database:
    image: mysql:8.0
    container_name: nxtclass-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-nxtClass108}
      MYSQL_USER: ${DB_USERNAME:-nxtclass_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-nxtclass_password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - nxtclass-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nxtclass-backend
    restart: unless-stopped
    environment:
      # Spring Profile
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILE:-dev}
      
      # Database Configuration
      DB_URL: jdbc:mysql://database:3306/${DB_NAME:-nxtClass108}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      DB_USERNAME: ${DB_USERNAME:-nxtclass_user}
      DB_PASSWORD: ${DB_PASSWORD:-nxtclass_password}
      
      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-3600000}
      
      # CORS Configuration
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:5173,http://localhost:80}
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      SECURITY_LOG_LEVEL: ${SECURITY_LOG_LEVEL:-WARN}
      HIBERNATE_LOG_LEVEL: ${HIBERNATE_LOG_LEVEL:-WARN}
      
      # JPA Configuration
      JPA_SHOW_SQL: ${JPA_SHOW_SQL:-false}
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - nxtclass-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost:8080/api}
    container_name: nxtclass-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - nxtclass-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3

networks:
  nxtclass-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
