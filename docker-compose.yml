version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: nxtclass-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-nxtclass_root_2024}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-nxtclass_db}
      MYSQL_USER: ${MYSQL_USER:-nxtclass_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-nxtclass_pass_2024}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "3306:3306"
    networks:
      - nxtclass-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nxtclass-backend
    restart: unless-stopped
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/nxtclass_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER:-nxtclass_user}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD:-nxtclass_pass_2024}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: false
      SERVER_PORT: 8080
      JWT_SECRET: ${JWT_SECRET:-mySecretKey123456789012345678901234567890}
      CORS_ALLOWED_ORIGINS: http://localhost
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - nxtclass-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # React Frontend with Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost/api
    container_name: nxtclass-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - nxtclass-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  nxtclass-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
