✅ SINGLE CONTAINER FOR LOCAL TESTING

ONE CONTAINER. ONE URL. SIMPLE.

HOW TO TEST:
============

Run this command:

    ./test-local.sh

Wait 5-10 minutes (first time), then open:

    http://localhost

That's it! ✅


WHAT'S INSIDE THE CONTAINER:
============================

┌─────────────────────────────┐
│   One Docker Container      │
│                             │
│   • MySQL (database)        │
│   • Backend (API)           │
│   • Nginx (web server)      │
│                             │
└─────────────────────────────┘
         ↓
   http://localhost


COMMANDS:
=========

Start:    ./test-local.sh
Stop:     docker-compose -f docker-compose.local.yml down
Logs:     docker-compose -f docker-compose.local.yml logs -f
Restart:  docker-compose -f docker-compose.local.yml restart


WHY ONE CONTAINER?
==================

✅ Simpler - one container vs three
✅ Faster - no network coordination
✅ One URL - just localhost
✅ Less memory - one process
✅ Perfect for local testing


COMPARISON:
===========

Single Container (LOCAL):
- Command: ./test-local.sh
- Containers: 1
- URL: http://localhost
- Best for: Local testing

Multi Container (PRODUCTION):
- Command: docker-compose up -d
- Containers: 3 (MySQL, Backend, Frontend)
- URL: http://localhost
- Best for: Production deployment


FOR LOCAL TESTING, USE:
=======================

    ./test-local.sh

Simple. One container. One URL.
